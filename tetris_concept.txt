structure tetromino:

int const type (1-5)
int const rayon_rotation (0 - 2)
int etat_rotation (1-4)
int direction_autorisee[2] 

structure fichier tetromino:
data1234,rayon_rotation,couleur(1er octet),couleur(2eme octet),couleur(3eme octet)

jeu (matrice 10*20)

|		  |
|		 2|
|1 1	 2|
|1 1 1 0 2|
|1 1 1 0 2|

1=bloc fixe
2= pièce en mouvement
0= espace vide

algo:

à un intervalle de temps donné (par la vitesse):
vérifier collision pièce avec le sol (si 2 au dessus de 1, fixer la pièce (tout les 2 deviennent des 1)
appliquer_gravité(tout les 1 au dessus de cases vides "tombent", idem pour les 2)

à tout moment : 
vérifier collision direction pièce désactiver mouvement vers la direction si la pièce touche un bloc vers cette direction
vérifier distance rotation et interdire rotation si distance pas bonne
bouger pièce (bas, gauche, droite, rotation) vers direction autorisée


début programme :
remplir_catalogue(catalogue_tetromino)
piece = selection_piece(catalogue_tetromino)
afficherpieceenhautmatrice

pour bouger piece
parcourir terrain[piece[x][y]

Rôle SDL :

afficher la matrice 
détecter touches

###NOTES###

Si rotation : avancer changer rayon x
